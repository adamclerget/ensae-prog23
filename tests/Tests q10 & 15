from time import perf_counter

import sys 
sys.path.append("delivery_network")

from graph import Graph, graph_from_file, kruskal, UnionFind, routes_from_file, min_power_mst


# Question 10

for j in range(1, 10):
    t1_start = perf_counter()
    g = graph_from_file("input/network.{}.in".format(j))
    t = routes_from_file("input/routes.{}.in".format(j))
    for i in range(5):
        a = g.min_power(*t[i])
        print(a)
    t1_stop = perf_counter()
    print("Pour le fichier route "+str(j)+", l'algorithme a besoin d'environ")
    print(float((t1_stop - t1_start)*float(len(t))/5))
    print('secondes')

# Question 15

for j in range(1, 10):
    t1_start = perf_counter()
    g = graph_from_file("input/network.{}.in".format(j))
    t = routes_from_file("input/routes.{}.in".format(j))
    for i in range(5):
        a = min_power_mst(g, *t[i])
        print(a)
    t1_stop = perf_counter()
    print("Pour le fichier route "+str(j)+", l'algorithme a besoin d'environ")
    print(float((t1_stop - t1_start)*float(len(t)))/5)
    print('secondes')
